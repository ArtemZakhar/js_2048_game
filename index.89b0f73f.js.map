{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","src/constants/gameStatus.js","src/scripts/components/addNewNum.js","src/scripts/components/random.js","src/scripts/components/initialState.js","src/scripts/components/moveDown.js","src/scripts/components/moveLeft.js","src/scripts/components/moveRight.js","src/scripts/components/moveUp.js","src/scripts/components/renderNums.js","src/scripts/components/swipe.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nconst $e156505550b29bc7$export$ed83628311d3f442 = {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n};\n\n\nvar $a5fd07fa01589658$require$gameStatus = $e156505550b29bc7$export$ed83628311d3f442;\nconst $5db4673ee510fda2$var$random = {\n    num () {\n        const probability = Math.random();\n        if (probability <= 0.9) return 2;\n        else return 4;\n    },\n    position (arr) {\n        let firstNum = Math.floor(Math.random() * 4);\n        while(!arr[firstNum].includes(0))firstNum = Math.floor(Math.random() * 4);\n        let secondNum = Math.floor(Math.random() * 4);\n        while(arr[firstNum][secondNum] !== 0)secondNum = Math.floor(Math.random() * 4);\n        return [\n            firstNum,\n            secondNum\n        ];\n    }\n};\nvar $5db4673ee510fda2$export$2e2bcd8739ae039 = $5db4673ee510fda2$var$random;\n\n\nconst $99b9a12ccb81e956$var$addNewNumToState = (state)=>{\n    const newState = state.map((row)=>[\n            ...row\n        ]);\n    const num = (0, $5db4673ee510fda2$export$2e2bcd8739ae039).num();\n    const [first, second] = (0, $5db4673ee510fda2$export$2e2bcd8739ae039).position(newState);\n    newState[first][second] = num;\n    return newState;\n};\nvar $99b9a12ccb81e956$export$2e2bcd8739ae039 = $99b9a12ccb81e956$var$addNewNumToState;\n\n\nvar $a5fd07fa01589658$require$addNewNumToState = $99b9a12ccb81e956$export$2e2bcd8739ae039;\n\nconst $2516c1355742d1b0$var$initialState = ()=>{\n    const state = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    const newState = (0, $99b9a12ccb81e956$export$2e2bcd8739ae039)(state);\n    return (0, $99b9a12ccb81e956$export$2e2bcd8739ae039)(newState);\n};\nvar $2516c1355742d1b0$export$2e2bcd8739ae039 = $2516c1355742d1b0$var$initialState;\n\n\nvar $a5fd07fa01589658$require$initialState = $2516c1355742d1b0$export$2e2bcd8739ae039;\nconst $126651681aa7e066$var$moveDown = (state)=>{\n    let noMove = true;\n    for(let i = 0; i < state.length; i += 1){\n        const lastCell = [\n            state.length - 1,\n            state[state.length - 1][i]\n        ];\n        let lastFreeCell = null;\n        for(let j = state.length - 1; j >= 0; j -= 1){\n            const num = state[j][i];\n            if (num === 0) {\n                if (lastFreeCell !== null) continue;\n                lastFreeCell = j;\n                continue;\n            }\n            if (lastCell[1] === num && lastCell[0] !== j) {\n                state[lastCell[0]][i] = num * 2;\n                state[j][i] = 0;\n                lastFreeCell = j;\n                lastCell[0] -= 1;\n                j += 1;\n                lastCell[1] = state[lastCell[0]][i];\n                noMove = false;\n                continue;\n            }\n            if (lastFreeCell !== null) {\n                state[lastFreeCell][i] = num;\n                lastCell[0] = lastFreeCell;\n                lastCell[1] = num;\n                lastFreeCell -= 1;\n                state[j][i] = 0;\n                noMove = false;\n                continue;\n            }\n            if (lastCell[1] !== num) {\n                lastCell[0] -= 1;\n                lastCell[1] = num;\n                continue;\n            }\n        }\n    }\n    if (noMove) return false;\n    return state;\n};\nvar $126651681aa7e066$export$2e2bcd8739ae039 = $126651681aa7e066$var$moveDown;\n\n\nvar $a5fd07fa01589658$require$moveDown = $126651681aa7e066$export$2e2bcd8739ae039;\nconst $73ddf941282ecb83$var$moveLeft = (state)=>{\n    let noMove = true;\n    for(let i = 0; i < state.length; i += 1){\n        const line = state[i];\n        const lastCell = [\n            0,\n            line[0]\n        ];\n        let lastFreeCell = null;\n        for(let j = 0; j < line.length; j += 1){\n            const num = line[j];\n            if (num === 0) {\n                if (lastFreeCell !== null) continue;\n                lastFreeCell = j;\n                continue;\n            }\n            if (lastCell[1] === num && lastCell[0] !== j) {\n                state[i][lastCell[0]] = num * 2;\n                state[i][j] = 0;\n                lastFreeCell = j;\n                lastCell[0] += 1;\n                j -= 1;\n                lastCell[1] = state[j][lastCell[0]];\n                noMove = false;\n                continue;\n            }\n            if (lastFreeCell !== null) {\n                state[i][lastFreeCell] = num;\n                lastCell[0] = lastFreeCell;\n                lastCell[1] = num;\n                lastFreeCell += 1;\n                state[i][j] = 0;\n                noMove = false;\n                continue;\n            }\n            if (lastCell[1] !== num) {\n                lastCell[0] += 1;\n                lastCell[1] = num;\n                continue;\n            }\n        }\n    }\n    if (noMove) return false;\n    return state;\n};\nvar $73ddf941282ecb83$export$2e2bcd8739ae039 = $73ddf941282ecb83$var$moveLeft;\n\n\nvar $a5fd07fa01589658$require$moveLeft = $73ddf941282ecb83$export$2e2bcd8739ae039;\nconst $76bd34cc9ab2742b$var$moveRight = (state)=>{\n    let noMove = true;\n    for(let i = 0; i < state.length; i += 1){\n        const line = state[i];\n        const lastCell = [\n            line.length - 1,\n            line[line.length - 1]\n        ];\n        let lastFreeCell = null;\n        for(let j = line.length - 1; j >= 0; j -= 1){\n            const num = line[j];\n            if (num === 0) {\n                if (lastFreeCell !== null) continue;\n                lastFreeCell = j;\n                continue;\n            }\n            if (lastCell[1] === num && lastCell[0] !== j) {\n                state[i][lastCell[0]] = num * 2;\n                state[i][j] = 0;\n                lastFreeCell = j;\n                lastCell[0] -= 1;\n                j += 1;\n                lastCell[1] = state[j][lastCell[0]];\n                noMove = false;\n                continue;\n            }\n            if (lastFreeCell !== null) {\n                state[i][lastFreeCell] = num;\n                lastCell[0] = lastFreeCell;\n                lastCell[1] = num;\n                lastFreeCell -= 1;\n                state[i][j] = 0;\n                noMove = false;\n                continue;\n            }\n            if (lastCell[1] !== num) {\n                lastCell[0] -= 1;\n                lastCell[1] = num;\n                continue;\n            }\n        }\n    }\n    if (noMove) return false;\n    return state;\n};\nvar $76bd34cc9ab2742b$export$2e2bcd8739ae039 = $76bd34cc9ab2742b$var$moveRight;\n\n\nvar $a5fd07fa01589658$require$moveRight = $76bd34cc9ab2742b$export$2e2bcd8739ae039;\nconst $e055ba4b5fff69fb$var$moveUp = (state)=>{\n    let noMove = true;\n    for(let i = 0; i < state.length; i += 1){\n        const lastCell = [\n            0,\n            state[0][i]\n        ];\n        let lastFreeCell = null;\n        for(let j = 0; j < state.length; j += 1){\n            const num = state[j][i];\n            if (num === 0) {\n                if (lastFreeCell !== null) continue;\n                lastFreeCell = j;\n                continue;\n            }\n            if (lastCell[1] === num && lastCell[0] !== j) {\n                state[lastCell[0]][i] = num * 2;\n                state[j][i] = 0;\n                lastFreeCell = j;\n                lastCell[0] += 1;\n                j -= 1;\n                lastCell[1] = state[lastCell[0]][i];\n                noMove = false;\n                continue;\n            }\n            if (lastFreeCell !== null) {\n                state[lastFreeCell][i] = num;\n                lastCell[0] = lastFreeCell;\n                lastCell[1] = num;\n                lastFreeCell += 1;\n                state[j][i] = 0;\n                noMove = false;\n                continue;\n            }\n            if (lastCell[1] !== num) {\n                lastCell[0] += 1;\n                lastCell[1] = num;\n                continue;\n            }\n        }\n    }\n    if (noMove) return false;\n    return state;\n};\nvar $e055ba4b5fff69fb$export$2e2bcd8739ae039 = $e055ba4b5fff69fb$var$moveUp;\n\n\nvar $a5fd07fa01589658$require$moveUp = $e055ba4b5fff69fb$export$2e2bcd8739ae039;\nfunction $bc1b0cc226b8a1d3$var$wait(delay) {\n    return new Promise((resolve)=>{\n        setTimeout(()=>resolve(), delay);\n    });\n}\nconst $bc1b0cc226b8a1d3$var$renderNums = (state)=>{\n    const table = document.querySelector(\"tbody\");\n    const rows = [\n        ...table.children\n    ];\n    rows.forEach((row, index)=>{\n        const cells = [\n            ...row.children\n        ];\n        cells.forEach((cell, i)=>{\n            if (cell.children.length) {\n                cell.lastChild.classList.add(\"hide\");\n                $bc1b0cc226b8a1d3$var$wait(75).then(()=>{\n                    cell.removeChild(cell.lastChild);\n                    const divTag = document.createElement(\"div\");\n                    divTag.classList.add(\"field-cell\");\n                    divTag.style.cssText = `display: flex; justify-content: center; align-items: center;`;\n                    const num = state[index][i];\n                    const content = num === 0 ? \"\" : num;\n                    if (num) divTag.classList.add(`field-cell--${num}`);\n                    divTag.textContent = content;\n                    cell.append(divTag);\n                });\n            } else {\n                const divTag = document.createElement(\"div\");\n                divTag.classList.add(\"field-cell\");\n                divTag.style.cssText = `display: flex; justify-content: center; align-items: center;`;\n                const num = state[index][i];\n                const content = num === 0 ? \"\" : num;\n                if (num) divTag.classList.add(`field-cell--${num}`);\n                divTag.textContent = content;\n                cell.append(divTag);\n            }\n        });\n    });\n};\nvar $bc1b0cc226b8a1d3$export$2e2bcd8739ae039 = $bc1b0cc226b8a1d3$var$renderNums;\n\n\nvar $a5fd07fa01589658$require$renderNums = $bc1b0cc226b8a1d3$export$2e2bcd8739ae039;\nclass $a5fd07fa01589658$var$Game {\n    state = [];\n    status = $a5fd07fa01589658$require$gameStatus.idle;\n    constructor(data){\n        this.state = data;\n    }\n    moveLeft() {\n        if (this.getStatus() !== $a5fd07fa01589658$require$gameStatus.playing) return;\n        const afterMove = $a5fd07fa01589658$require$moveLeft(this.getState());\n        this.applyChanges(afterMove);\n    }\n    moveRight() {\n        if (this.getStatus() !== $a5fd07fa01589658$require$gameStatus.playing) return;\n        const afterMove = $a5fd07fa01589658$require$moveRight(this.getState());\n        this.applyChanges(afterMove);\n    }\n    moveUp() {\n        if (this.getStatus() !== $a5fd07fa01589658$require$gameStatus.playing) return;\n        const afterMove = $a5fd07fa01589658$require$moveUp(this.getState());\n        this.applyChanges(afterMove);\n    }\n    moveDown() {\n        if (this.getStatus() !== $a5fd07fa01589658$require$gameStatus.playing) return;\n        const afterMove = $a5fd07fa01589658$require$moveDown(this.getState());\n        this.applyChanges(afterMove);\n    }\n    getScore() {\n        if (this.status === $a5fd07fa01589658$require$gameStatus.idle) return 0;\n        return this.state.flat().reduce((acc, elem)=>acc + elem, 0);\n    }\n    getState() {\n        return this.state.map((row)=>[\n                ...row\n            ]);\n    }\n    getStatus() {\n        return this.status;\n    }\n    start() {\n        this.status = $a5fd07fa01589658$require$gameStatus.playing;\n        $a5fd07fa01589658$require$renderNums(this.getState());\n    }\n    restart() {\n        this.state = $a5fd07fa01589658$require$initialState();\n        $a5fd07fa01589658$require$renderNums(this.getState());\n    }\n    applyChanges(afterMove) {\n        if (!afterMove) return;\n        if (this.isFull(afterMove)) {\n            this.gameOver();\n            return;\n        }\n        const newState = $a5fd07fa01589658$require$addNewNumToState(afterMove);\n        this.state = newState;\n        $a5fd07fa01589658$require$renderNums(newState);\n        if (this.has2048(this.state)) this.winner();\n    }\n    isFull(afterMove) {\n        return afterMove.flat().every((cell)=>cell !== 0);\n    }\n    gameOver() {\n        this.status = $a5fd07fa01589658$require$gameStatus.lose;\n        document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n    }\n    has2048(afterMove) {\n        return afterMove.flat().includes(2048);\n    }\n    winner() {\n        this.status = $a5fd07fa01589658$require$gameStatus.win;\n        document.querySelector(\".message-win\").classList.remove(\"hidden\");\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\n\nvar $09e991522ca7e64e$require$initialState = $2516c1355742d1b0$export$2e2bcd8739ae039;\nconst $ff6a34652a8ce7b3$var$swipe = (game)=>{\n    const table = document.querySelector(\"tbody\");\n    const score = document.querySelector(\".game-score\");\n    let touchStartX = 0;\n    let touchEndX = 0;\n    let touchStartY = 0;\n    let touchEndY = 0;\n    const SWIPE_DIFF = 20;\n    function checkDirection() {\n        const xDiff = Math.abs(touchStartX - touchEndX);\n        const yDiff = Math.abs(touchStartY - touchEndY);\n        if (xDiff > yDiff) {\n            if (touchStartX - touchEndX > SWIPE_DIFF) game.moveLeft();\n            if (touchEndX - touchStartX > SWIPE_DIFF) game.moveRight();\n        } else {\n            if (touchStartY - touchEndY > SWIPE_DIFF) game.moveUp();\n            if (touchEndY - touchStartY > SWIPE_DIFF) game.moveDown();\n        }\n        const data = game.getScore();\n        score.textContent = data;\n    }\n    table.addEventListener(\"touchstart\", (e)=>{\n        touchStartX = e.changedTouches[0].screenX;\n        touchStartY = e.changedTouches[0].screenY;\n    });\n    table.addEventListener(\"touchend\", (e)=>{\n        touchEndX = e.changedTouches[0].screenX;\n        touchEndY = e.changedTouches[0].screenY;\n        checkDirection();\n    });\n    return ()=>{\n        table.removeEventListener(\"touchstart\", touchStartHandler);\n        table.removeEventListener(\"touchend\", touchEndHandler);\n    };\n};\nvar $ff6a34652a8ce7b3$export$2e2bcd8739ae039 = $ff6a34652a8ce7b3$var$swipe;\n\n\nvar $09e991522ca7e64e$require$swipe = $ff6a34652a8ce7b3$export$2e2bcd8739ae039;\nconst $09e991522ca7e64e$var$startButton = document.querySelector(\".controls button\");\nconst $09e991522ca7e64e$var$score = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports($09e991522ca7e64e$require$initialState());\ndocument.body.style.overflowY = \"hidden\";\n$09e991522ca7e64e$var$startButton.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$startButton.classList.contains(\"start\")) {\n        $09e991522ca7e64e$var$startButton.classList.remove(\"start\");\n        $09e991522ca7e64e$var$startButton.classList.add(\"restart\");\n        $09e991522ca7e64e$var$startButton.textContent = \"Restart\";\n        $09e991522ca7e64e$var$game.start();\n    } else $09e991522ca7e64e$var$game.restart();\n    document.querySelector(\".message-start\").classList.add(\"hidden\");\n    const data = $09e991522ca7e64e$var$game.getScore();\n    $09e991522ca7e64e$var$score.textContent = data;\n});\ndocument.addEventListener(\"keydown\", (e)=>{\n    if (e.key === \"ArrowRight\") {\n        $09e991522ca7e64e$var$game.moveRight();\n        const data = $09e991522ca7e64e$var$game.getScore();\n        $09e991522ca7e64e$var$score.textContent = data;\n    }\n    if (e.key === \"ArrowLeft\") {\n        $09e991522ca7e64e$var$game.moveLeft();\n        const data = $09e991522ca7e64e$var$game.getScore();\n        $09e991522ca7e64e$var$score.textContent = data;\n    }\n    if (e.key === \"ArrowUp\") {\n        $09e991522ca7e64e$var$game.moveUp();\n        const data = $09e991522ca7e64e$var$game.getScore();\n        $09e991522ca7e64e$var$score.textContent = data;\n    }\n    if (e.key === \"ArrowDown\") {\n        $09e991522ca7e64e$var$game.moveDown();\n        const data = $09e991522ca7e64e$var$game.getScore();\n        $09e991522ca7e64e$var$score.textContent = data;\n    }\n});\n$09e991522ca7e64e$require$swipe($09e991522ca7e64e$var$game);\n\n\n//# sourceMappingURL=index.89b0f73f.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst { default: initialState } = require('./components/initialState');\nconst { default: swipe } = require('./components/swipe');\nconst startButton = document.querySelector('.controls button');\nconst score = document.querySelector('.game-score');\n\nconst game = new Game(initialState());\ndocument.body.style.overflowY = 'hidden';\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('start')) {\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n    game.start();\n  } else {\n    game.restart();\n  }\n\n  document.querySelector('.message-start').classList.add('hidden');\n\n  const data = game.getScore();\n\n  score.textContent = data;\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.key === 'ArrowRight') {\n    game.moveRight();\n\n    const data = game.getScore();\n\n    score.textContent = data;\n  }\n\n  if (e.key === 'ArrowLeft') {\n    game.moveLeft();\n\n    const data = game.getScore();\n\n    score.textContent = data;\n  }\n\n  if (e.key === 'ArrowUp') {\n    game.moveUp();\n\n    const data = game.getScore();\n\n    score.textContent = data;\n  }\n\n  if (e.key === 'ArrowDown') {\n    game.moveDown();\n\n    const data = game.getScore();\n\n    score.textContent = data;\n  }\n});\n\nswipe(game);\n","'use strict';\n\nconst { gameStatus } = require('../constants/gameStatus');\nconst {\n  default: addNewNumToState,\n} = require('../scripts/components/addNewNum');\nconst { default: initialState } = require('../scripts/components/initialState');\nconst { default: moveDown } = require('../scripts/components/moveDown');\nconst { default: moveLeft } = require('../scripts/components/moveLeft');\nconst { default: moveRight } = require('../scripts/components/moveRight');\nconst { default: moveUp } = require('../scripts/components/moveUp');\nconst { default: renderNums } = require('../scripts/components/renderNums');\n\nclass Game {\n  state = [];\n  status = gameStatus.idle;\n\n  constructor(data) {\n    this.state = data;\n  }\n\n  moveLeft() {\n    if (this.getStatus() !== gameStatus.playing) {\n      return;\n    }\n\n    const afterMove = moveLeft(this.getState());\n\n    this.applyChanges(afterMove);\n  }\n\n  moveRight() {\n    if (this.getStatus() !== gameStatus.playing) {\n      return;\n    }\n\n    const afterMove = moveRight(this.getState());\n\n    this.applyChanges(afterMove);\n  }\n\n  moveUp() {\n    if (this.getStatus() !== gameStatus.playing) {\n      return;\n    }\n\n    const afterMove = moveUp(this.getState());\n\n    this.applyChanges(afterMove);\n  }\n\n  moveDown() {\n    if (this.getStatus() !== gameStatus.playing) {\n      return;\n    }\n\n    const afterMove = moveDown(this.getState());\n\n    this.applyChanges(afterMove);\n  }\n\n  getScore() {\n    if (this.status === gameStatus.idle) {\n      return 0;\n    }\n\n    return this.state.flat().reduce((acc, elem) => acc + elem, 0);\n  }\n\n  getState() {\n    return this.state.map((row) => [...row]);\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = gameStatus.playing;\n    renderNums(this.getState());\n  }\n\n  restart() {\n    this.state = initialState();\n    renderNums(this.getState());\n  }\n\n  applyChanges(afterMove) {\n    if (!afterMove) {\n      return;\n    }\n\n    if (this.isFull(afterMove)) {\n      this.gameOver();\n\n      return;\n    }\n\n    const newState = addNewNumToState(afterMove);\n\n    this.state = newState;\n    renderNums(newState);\n\n    if (this.has2048(this.state)) {\n      this.winner();\n    }\n  }\n\n  isFull(afterMove) {\n    return afterMove.flat().every((cell) => cell !== 0);\n  }\n\n  gameOver() {\n    this.status = gameStatus.lose;\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n\n  has2048(afterMove) {\n    return afterMove.flat().includes(2048);\n  }\n\n  winner() {\n    this.status = gameStatus.win;\n    document.querySelector('.message-win').classList.remove('hidden');\n  }\n}\n\nmodule.exports = Game;\n","export const gameStatus = {\n  idle: 'idle',\n  playing: 'playing',\n  win: 'win',\n  lose: 'lose',\n};\n","import random from './random';\n\nconst addNewNumToState = (state) => {\n  const newState = state.map((row) => [...row]);\n\n  const num = random.num();\n\n  const [first, second] = random.position(newState);\n\n  newState[first][second] = num;\n\n  return newState;\n};\n\nexport default addNewNumToState;\n","const random = {\n  num() {\n    const probability = Math.random();\n\n    if (probability <= 0.9) {\n      return 2;\n    } else {\n      return 4;\n    }\n  },\n\n  position(arr) {\n    let firstNum = Math.floor(Math.random() * 4);\n\n    while (!arr[firstNum].includes(0)) {\n      firstNum = Math.floor(Math.random() * 4);\n    }\n\n    let secondNum = Math.floor(Math.random() * 4);\n\n    while (arr[firstNum][secondNum] !== 0) {\n      secondNum = Math.floor(Math.random() * 4);\n    }\n\n    return [firstNum, secondNum];\n  },\n};\n\nexport default random;\n","import addNewNumToState from './addNewNum';\n\nconst initialState = () => {\n  const state = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  const newState = addNewNumToState(state);\n\n  return addNewNumToState(newState);\n};\n\nexport default initialState;\n","const moveDown = (state) => {\n  let noMove = true;\n\n  for (let i = 0; i < state.length; i += 1) {\n    const lastCell = [state.length - 1, state[state.length - 1][i]];\n    let lastFreeCell = null;\n\n    for (let j = state.length - 1; j >= 0; j -= 1) {\n      const num = state[j][i];\n\n      if (num === 0) {\n        if (lastFreeCell !== null) {\n          continue;\n        }\n        lastFreeCell = j;\n        continue;\n      }\n\n      if (lastCell[1] === num && lastCell[0] !== j) {\n        state[lastCell[0]][i] = num * 2;\n        state[j][i] = 0;\n        lastFreeCell = j;\n        lastCell[0] -= 1;\n        j += 1;\n        lastCell[1] = state[lastCell[0]][i];\n        noMove = false;\n        continue;\n      }\n\n      if (lastFreeCell !== null) {\n        state[lastFreeCell][i] = num;\n        lastCell[0] = lastFreeCell;\n        lastCell[1] = num;\n        lastFreeCell -= 1;\n        state[j][i] = 0;\n        noMove = false;\n        continue;\n      }\n\n      if (lastCell[1] !== num) {\n        lastCell[0] -= 1;\n        lastCell[1] = num;\n        continue;\n      }\n    }\n  }\n\n  if (noMove) {\n    return false;\n  }\n\n  return state;\n};\n\nexport default moveDown;\n","const moveLeft = (state) => {\n  let noMove = true;\n\n  for (let i = 0; i < state.length; i += 1) {\n    const line = state[i];\n    const lastCell = [0, line[0]];\n    let lastFreeCell = null;\n\n    for (let j = 0; j < line.length; j += 1) {\n      const num = line[j];\n\n      if (num === 0) {\n        if (lastFreeCell !== null) {\n          continue;\n        }\n        lastFreeCell = j;\n\n        continue;\n      }\n\n      if (lastCell[1] === num && lastCell[0] !== j) {\n        state[i][lastCell[0]] = num * 2;\n        state[i][j] = 0;\n        lastFreeCell = j;\n        lastCell[0] += 1;\n        j -= 1;\n        lastCell[1] = state[j][lastCell[0]];\n        noMove = false;\n        continue;\n      }\n\n      if (lastFreeCell !== null) {\n        state[i][lastFreeCell] = num;\n        lastCell[0] = lastFreeCell;\n        lastCell[1] = num;\n        lastFreeCell += 1;\n        state[i][j] = 0;\n        noMove = false;\n        continue;\n      }\n\n      if (lastCell[1] !== num) {\n        lastCell[0] += 1;\n        lastCell[1] = num;\n        continue;\n      }\n    }\n  }\n\n  if (noMove) {\n    return false;\n  }\n\n  return state;\n};\n\nexport default moveLeft;\n","const moveRight = (state) => {\n  let noMove = true;\n\n  for (let i = 0; i < state.length; i += 1) {\n    const line = state[i];\n    const lastCell = [line.length - 1, line[line.length - 1]];\n    let lastFreeCell = null;\n\n    for (let j = line.length - 1; j >= 0; j -= 1) {\n      const num = line[j];\n\n      if (num === 0) {\n        if (lastFreeCell !== null) {\n          continue;\n        }\n        lastFreeCell = j;\n\n        continue;\n      }\n\n      if (lastCell[1] === num && lastCell[0] !== j) {\n        state[i][lastCell[0]] = num * 2;\n        state[i][j] = 0;\n        lastFreeCell = j;\n        lastCell[0] -= 1;\n        j += 1;\n        lastCell[1] = state[j][lastCell[0]];\n        noMove = false;\n        continue;\n      }\n\n      if (lastFreeCell !== null) {\n        state[i][lastFreeCell] = num;\n        lastCell[0] = lastFreeCell;\n        lastCell[1] = num;\n        lastFreeCell -= 1;\n        state[i][j] = 0;\n        noMove = false;\n        continue;\n      }\n\n      if (lastCell[1] !== num) {\n        lastCell[0] -= 1;\n        lastCell[1] = num;\n        continue;\n      }\n    }\n  }\n\n  if (noMove) {\n    return false;\n  }\n\n  return state;\n};\n\nexport default moveRight;\n","const moveUp = (state) => {\n  let noMove = true;\n\n  for (let i = 0; i < state.length; i += 1) {\n    const lastCell = [0, state[0][i]];\n    let lastFreeCell = null;\n\n    for (let j = 0; j < state.length; j += 1) {\n      const num = state[j][i];\n\n      if (num === 0) {\n        if (lastFreeCell !== null) {\n          continue;\n        }\n        lastFreeCell = j;\n        continue;\n      }\n\n      if (lastCell[1] === num && lastCell[0] !== j) {\n        state[lastCell[0]][i] = num * 2;\n        state[j][i] = 0;\n        lastFreeCell = j;\n        lastCell[0] += 1;\n        j -= 1;\n        lastCell[1] = state[lastCell[0]][i];\n        noMove = false;\n        continue;\n      }\n\n      if (lastFreeCell !== null) {\n        state[lastFreeCell][i] = num;\n        lastCell[0] = lastFreeCell;\n        lastCell[1] = num;\n        lastFreeCell += 1;\n        state[j][i] = 0;\n        noMove = false;\n        continue;\n      }\n\n      if (lastCell[1] !== num) {\n        lastCell[0] += 1;\n        lastCell[1] = num;\n        continue;\n      }\n    }\n  }\n\n  if (noMove) {\n    return false;\n  }\n\n  return state;\n};\n\nexport default moveUp;\n","function wait(delay) {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(), delay);\n  });\n}\n\nconst renderNums = (state) => {\n  const table = document.querySelector('tbody');\n  const rows = [...table.children];\n\n  rows.forEach((row, index) => {\n    const cells = [...row.children];\n\n    cells.forEach((cell, i) => {\n      if (cell.children.length) {\n        cell.lastChild.classList.add('hide');\n\n        wait(75).then(() => {\n          cell.removeChild(cell.lastChild);\n\n          const divTag = document.createElement('div');\n\n          divTag.classList.add('field-cell');\n          divTag.style.cssText = `display: flex; justify-content: center; align-items: center;`;\n\n          const num = state[index][i];\n          const content = num === 0 ? '' : num;\n\n          if (num) {\n            divTag.classList.add(`field-cell--${num}`);\n          }\n\n          divTag.textContent = content;\n          cell.append(divTag);\n        });\n      } else {\n        const divTag = document.createElement('div');\n\n        divTag.classList.add('field-cell');\n        divTag.style.cssText = `display: flex; justify-content: center; align-items: center;`;\n\n        const num = state[index][i];\n        const content = num === 0 ? '' : num;\n\n        if (num) {\n          divTag.classList.add(`field-cell--${num}`);\n        }\n\n        divTag.textContent = content;\n        cell.append(divTag);\n      }\n    });\n  });\n};\n\nexport default renderNums;\n","const swipe = (game) => {\n  const table = document.querySelector('tbody');\n  const score = document.querySelector('.game-score');\n\n  let touchStartX = 0;\n  let touchEndX = 0;\n  let touchStartY = 0;\n  let touchEndY = 0;\n  const SWIPE_DIFF = 20;\n\n  function checkDirection() {\n    const xDiff = Math.abs(touchStartX - touchEndX);\n    const yDiff = Math.abs(touchStartY - touchEndY);\n\n    if (xDiff > yDiff) {\n      if (touchStartX - touchEndX > SWIPE_DIFF) {\n        game.moveLeft();\n      }\n      if (touchEndX - touchStartX > SWIPE_DIFF) {\n        game.moveRight();\n      }\n    } else {\n      if (touchStartY - touchEndY > SWIPE_DIFF) {\n        game.moveUp();\n      }\n      if (touchEndY - touchStartY > SWIPE_DIFF) {\n        game.moveDown();\n      }\n    }\n\n    const data = game.getScore();\n\n    score.textContent = data;\n  }\n\n  table.addEventListener('touchstart', (e) => {\n    touchStartX = e.changedTouches[0].screenX;\n    touchStartY = e.changedTouches[0].screenY;\n  });\n\n  table.addEventListener('touchend', (e) => {\n    touchEndX = e.changedTouches[0].screenX;\n    touchEndY = e.changedTouches[0].screenY;\n    checkDirection();\n  });\n\n  return () => {\n    table.removeEventListener('touchstart', touchStartHandler);\n    table.removeEventListener('touchend', touchEndHandler);\n  };\n};\n\nexport default swipe;\n"],"names":["$a5fd07fa01589658$exports","$5db4673ee510fda2$export$2e2bcd8739ae039","num","probability","Math","random","position","arr","firstNum","floor","includes","secondNum","$99b9a12ccb81e956$export$2e2bcd8739ae039","state","newState","map","row","first","second","$2516c1355742d1b0$export$2e2bcd8739ae039","$a5fd07fa01589658$require$moveDown","noMove","i","length","lastCell","lastFreeCell","j","$a5fd07fa01589658$require$moveLeft","line","$a5fd07fa01589658$require$moveRight","$a5fd07fa01589658$require$moveUp","$a5fd07fa01589658$require$renderNums","rows","table","document","querySelector","children","forEach","index","cells","cell","lastChild","classList","add","$bc1b0cc226b8a1d3$var$wait","Promise","resolve","setTimeout","then","removeChild","divTag","createElement","style","cssText","textContent","append","status","constructor","data","moveLeft","getStatus","afterMove","getState","applyChanges","moveRight","moveUp","moveDown","getScore","flat","reduce","acc","elem","start","restart","$a5fd07fa01589658$require$initialState","isFull","gameOver","$a5fd07fa01589658$require$addNewNumToState","has2048","winner","every","remove","$09e991522ca7e64e$var$startButton","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$game","$09e991522ca7e64e$require$initialState","body","overflowY","addEventListener","contains","e","key","$09e991522ca7e64e$require$swipe","game","score","touchStartX","touchEndX","touchStartY","touchEndY","changedTouches","screenX","screenY","checkDirection","xDiff","abs","removeEventListener","touchStartHandler","touchEndHandler"],"version":3,"file":"index.89b0f73f.js.map"}